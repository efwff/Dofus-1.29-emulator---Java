/**
 * This class is generated by jOOQ
 */
package com.codebreak.login.persistence.tables.records;


import com.codebreak.login.persistence.tables.Account;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record14<Long, String, String, String, Integer, Timestamp, Timestamp, String, Timestamp, Timestamp, Boolean, String, String, String> {

    private static final long serialVersionUID = -560724609;

    /**
     * Setter for <code>codebreak_login.account.Id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>codebreak_login.account.Id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>codebreak_login.account.Name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>codebreak_login.account.Name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>codebreak_login.account.Password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>codebreak_login.account.Password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>codebreak_login.account.Nickname</code>.
     */
    public void setNickname(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>codebreak_login.account.Nickname</code>.
     */
    public String getNickname() {
        return (String) get(3);
    }

    /**
     * Setter for <code>codebreak_login.account.Power</code>.
     */
    public void setPower(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>codebreak_login.account.Power</code>.
     */
    public Integer getPower() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>codebreak_login.account.CreationDate</code>.
     */
    public void setCreationdate(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>codebreak_login.account.CreationDate</code>.
     */
    public Timestamp getCreationdate() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>codebreak_login.account.LastConnectionDate</code>.
     */
    public void setLastconnectiondate(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>codebreak_login.account.LastConnectionDate</code>.
     */
    public Timestamp getLastconnectiondate() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>codebreak_login.account.LastConnectionIP</code>.
     */
    public void setLastconnectionip(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>codebreak_login.account.LastConnectionIP</code>.
     */
    public String getLastconnectionip() {
        return (String) get(7);
    }

    /**
     * Setter for <code>codebreak_login.account.RemainingSubscription</code>.
     */
    public void setRemainingsubscription(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>codebreak_login.account.RemainingSubscription</code>.
     */
    public Timestamp getRemainingsubscription() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>codebreak_login.account.BannedUntil</code>.
     */
    public void setBanneduntil(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>codebreak_login.account.BannedUntil</code>.
     */
    public Timestamp getBanneduntil() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>codebreak_login.account.Banned</code>.
     */
    public void setBanned(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>codebreak_login.account.Banned</code>.
     */
    public Boolean getBanned() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>codebreak_login.account.SecretQuestion</code>.
     */
    public void setSecretquestion(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>codebreak_login.account.SecretQuestion</code>.
     */
    public String getSecretquestion() {
        return (String) get(11);
    }

    /**
     * Setter for <code>codebreak_login.account.Answer</code>.
     */
    public void setAnswer(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>codebreak_login.account.Answer</code>.
     */
    public String getAnswer() {
        return (String) get(12);
    }

    /**
     * Setter for <code>codebreak_login.account.Email</code>.
     */
    public void setEmail(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>codebreak_login.account.Email</code>.
     */
    public String getEmail() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Long, String, String, String, Integer, Timestamp, Timestamp, String, Timestamp, Timestamp, Boolean, String, String, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Long, String, String, String, Integer, Timestamp, Timestamp, String, Timestamp, Timestamp, Boolean, String, String, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Account.ACCOUNT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Account.ACCOUNT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Account.ACCOUNT.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Account.ACCOUNT.NICKNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Account.ACCOUNT.POWER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Account.ACCOUNT.CREATIONDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Account.ACCOUNT.LASTCONNECTIONDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Account.ACCOUNT.LASTCONNECTIONIP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return Account.ACCOUNT.REMAININGSUBSCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return Account.ACCOUNT.BANNEDUNTIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field11() {
        return Account.ACCOUNT.BANNED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return Account.ACCOUNT.SECRETQUESTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return Account.ACCOUNT.ANSWER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return Account.ACCOUNT.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getNickname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getPower();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreationdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getLastconnectiondate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getLastconnectionip();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getRemainingsubscription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getBanneduntil();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value11() {
        return getBanned();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getSecretquestion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getAnswer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value3(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value4(String value) {
        setNickname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value5(Integer value) {
        setPower(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value6(Timestamp value) {
        setCreationdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value7(Timestamp value) {
        setLastconnectiondate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value8(String value) {
        setLastconnectionip(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value9(Timestamp value) {
        setRemainingsubscription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value10(Timestamp value) {
        setBanneduntil(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value11(Boolean value) {
        setBanned(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value12(String value) {
        setSecretquestion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value13(String value) {
        setAnswer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value14(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord values(Long value1, String value2, String value3, String value4, Integer value5, Timestamp value6, Timestamp value7, String value8, Timestamp value9, Timestamp value10, Boolean value11, String value12, String value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(Long id, String name, String password, String nickname, Integer power, Timestamp creationdate, Timestamp lastconnectiondate, String lastconnectionip, Timestamp remainingsubscription, Timestamp banneduntil, Boolean banned, String secretquestion, String answer, String email) {
        super(Account.ACCOUNT);

        set(0, id);
        set(1, name);
        set(2, password);
        set(3, nickname);
        set(4, power);
        set(5, creationdate);
        set(6, lastconnectiondate);
        set(7, lastconnectionip);
        set(8, remainingsubscription);
        set(9, banneduntil);
        set(10, banned);
        set(11, secretquestion);
        set(12, answer);
        set(13, email);
    }
}
