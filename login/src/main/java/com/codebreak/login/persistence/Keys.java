/**
 * This class is generated by jOOQ
 */
package com.codebreak.login.persistence;


import com.codebreak.login.persistence.tables.Account;
import com.codebreak.login.persistence.tables.Gameservice;
import com.codebreak.login.persistence.tables.records.AccountRecord;
import com.codebreak.login.persistence.tables.records.GameserviceRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>codebreak_login</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountRecord, Long> IDENTITY_ACCOUNT = Identities0.IDENTITY_ACCOUNT;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRIMARY;
    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_NAME = UniqueKeys0.KEY_ACCOUNT_NAME;
    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_NICKNAME = UniqueKeys0.KEY_ACCOUNT_NICKNAME;
    public static final UniqueKey<GameserviceRecord> KEY_GAMESERVICE_PRIMARY = UniqueKeys0.KEY_GAMESERVICE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AccountRecord, Long> IDENTITY_ACCOUNT = createIdentity(Account.ACCOUNT, Account.ACCOUNT.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = createUniqueKey(Account.ACCOUNT, "KEY_account_PRIMARY", Account.ACCOUNT.ID);
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_NAME = createUniqueKey(Account.ACCOUNT, "KEY_account_Name", Account.ACCOUNT.NAME);
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_NICKNAME = createUniqueKey(Account.ACCOUNT, "KEY_account_Nickname", Account.ACCOUNT.NICKNAME);
        public static final UniqueKey<GameserviceRecord> KEY_GAMESERVICE_PRIMARY = createUniqueKey(Gameservice.GAMESERVICE, "KEY_gameservice_PRIMARY", Gameservice.GAMESERVICE.ID);
    }
}
