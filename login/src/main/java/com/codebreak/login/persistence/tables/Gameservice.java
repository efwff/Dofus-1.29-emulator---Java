/**
 * This class is generated by jOOQ
 */
package com.codebreak.login.persistence.tables;


import com.codebreak.login.persistence.CodebreakLogin;
import com.codebreak.login.persistence.Keys;
import com.codebreak.login.persistence.tables.records.GameserviceRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Gameservice extends TableImpl<GameserviceRecord> {

    private static final long serialVersionUID = -714540859;

    /**
     * The reference instance of <code>codebreak_login.gameservice</code>
     */
    public static final Gameservice GAMESERVICE = new Gameservice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GameserviceRecord> getRecordType() {
        return GameserviceRecord.class;
    }

    /**
     * The column <code>codebreak_login.gameservice.Id</code>.
     */
    public final TableField<GameserviceRecord, Integer> ID = createField("Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_login.gameservice.Name</code>.
     */
    public final TableField<GameserviceRecord, String> NAME = createField("Name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>codebreak_login.gameservice.Ip</code>.
     */
    public final TableField<GameserviceRecord, String> IP = createField("Ip", org.jooq.impl.SQLDataType.VARCHAR.length(15).nullable(false), this, "");

    /**
     * The column <code>codebreak_login.gameservice.Port</code>.
     */
    public final TableField<GameserviceRecord, Integer> PORT = createField("Port", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>codebreak_login.gameservice</code> table reference
     */
    public Gameservice() {
        this("gameservice", null);
    }

    /**
     * Create an aliased <code>codebreak_login.gameservice</code> table reference
     */
    public Gameservice(String alias) {
        this(alias, GAMESERVICE);
    }

    private Gameservice(String alias, Table<GameserviceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Gameservice(String alias, Table<GameserviceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CodebreakLogin.CODEBREAK_LOGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GameserviceRecord> getPrimaryKey() {
        return Keys.KEY_GAMESERVICE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GameserviceRecord>> getKeys() {
        return Arrays.<UniqueKey<GameserviceRecord>>asList(Keys.KEY_GAMESERVICE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Gameservice as(String alias) {
        return new Gameservice(alias, this);
    }

    /**
     * Rename this table
     */
    public Gameservice rename(String name) {
        return new Gameservice(name, null);
    }
}
