/**
 * This class is generated by jOOQ
 */
package com.codebreak.game.persistence.tables;


import com.codebreak.game.persistence.CodebreakGame;
import com.codebreak.game.persistence.Keys;
import com.codebreak.game.persistence.tables.records.PlayerRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Player extends TableImpl<PlayerRecord> {

    private static final long serialVersionUID = 1807122529;

    /**
     * The reference instance of <code>codebreak_game.player</code>
     */
    public static final Player PLAYER = new Player();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlayerRecord> getRecordType() {
        return PlayerRecord.class;
    }

    /**
     * The column <code>codebreak_game.player.Id</code>.
     */
    public final TableField<PlayerRecord, Long> ID = createField("Id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Name</code>.
     */
    public final TableField<PlayerRecord, String> NAME = createField("Name", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.AccountId</code>.
     */
    public final TableField<PlayerRecord, Long> ACCOUNTID = createField("AccountId", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Breed</code>.
     */
    public final TableField<PlayerRecord, UByte> BREED = createField("Breed", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Color1</code>.
     */
    public final TableField<PlayerRecord, Integer> COLOR1 = createField("Color1", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Color2</code>.
     */
    public final TableField<PlayerRecord, Integer> COLOR2 = createField("Color2", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Color3</code>.
     */
    public final TableField<PlayerRecord, Integer> COLOR3 = createField("Color3", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Skin</code>.
     */
    public final TableField<PlayerRecord, Integer> SKIN = createField("Skin", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.SkinSize</code>.
     */
    public final TableField<PlayerRecord, Integer> SKINSIZE = createField("SkinSize", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Vitality</code>.
     */
    public final TableField<PlayerRecord, Integer> VITALITY = createField("Vitality", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Wisdom</code>.
     */
    public final TableField<PlayerRecord, Integer> WISDOM = createField("Wisdom", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Strength</code>.
     */
    public final TableField<PlayerRecord, Integer> STRENGTH = createField("Strength", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Intelligence</code>.
     */
    public final TableField<PlayerRecord, Integer> INTELLIGENCE = createField("Intelligence", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Agility</code>.
     */
    public final TableField<PlayerRecord, Integer> AGILITY = createField("Agility", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Chance</code>.
     */
    public final TableField<PlayerRecord, Integer> CHANCE = createField("Chance", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Ap</code>.
     */
    public final TableField<PlayerRecord, Integer> AP = createField("Ap", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Mp</code>.
     */
    public final TableField<PlayerRecord, Integer> MP = createField("Mp", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Life</code>.
     */
    public final TableField<PlayerRecord, Integer> LIFE = createField("Life", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Energy</code>.
     */
    public final TableField<PlayerRecord, Integer> ENERGY = createField("Energy", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.SpellPoint</code>.
     */
    public final TableField<PlayerRecord, Integer> SPELLPOINT = createField("SpellPoint", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.CaracPoint</code>.
     */
    public final TableField<PlayerRecord, Integer> CARACPOINT = createField("CaracPoint", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.MapId</code>.
     */
    public final TableField<PlayerRecord, Integer> MAPID = createField("MapId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.CellId</code>.
     */
    public final TableField<PlayerRecord, Integer> CELLID = createField("CellId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Restriction</code>.
     */
    public final TableField<PlayerRecord, Integer> RESTRICTION = createField("Restriction", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Experience</code>.
     */
    public final TableField<PlayerRecord, Long> EXPERIENCE = createField("Experience", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Dead</code>.
     */
    public final TableField<PlayerRecord, Byte> DEAD = createField("Dead", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.MaxLevel</code>.
     */
    public final TableField<PlayerRecord, Integer> MAXLEVEL = createField("MaxLevel", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.DeathCount</code>.
     */
    public final TableField<PlayerRecord, Integer> DEATHCOUNT = createField("DeathCount", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Level</code>.
     */
    public final TableField<PlayerRecord, Integer> LEVEL = createField("Level", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Sex</code>.
     */
    public final TableField<PlayerRecord, Byte> SEX = createField("Sex", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.Kamas</code>.
     */
    public final TableField<PlayerRecord, Long> KAMAS = createField("Kamas", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.SavedMapId</code>.
     */
    public final TableField<PlayerRecord, Integer> SAVEDMAPID = createField("SavedMapId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.SavedCellId</code>.
     */
    public final TableField<PlayerRecord, Integer> SAVEDCELLID = createField("SavedCellId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>codebreak_game.player.MerchantMode</code>.
     */
    public final TableField<PlayerRecord, Boolean> MERCHANTMODE = createField("MerchantMode", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>codebreak_game.player.TitleId</code>.
     */
    public final TableField<PlayerRecord, Integer> TITLEID = createField("TitleId", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>codebreak_game.player.TitleParams</code>.
     */
    public final TableField<PlayerRecord, String> TITLEPARAMS = createField("TitleParams", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("\"\"", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>codebreak_game.player.EmoteCapacity</code>.
     */
    public final TableField<PlayerRecord, Integer> EMOTECAPACITY = createField("EmoteCapacity", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>codebreak_game.player.DeathType</code>.
     */
    public final TableField<PlayerRecord, Integer> DEATHTYPE = createField("DeathType", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>codebreak_game.player</code> table reference
     */
    public Player() {
        this("player", null);
    }

    /**
     * Create an aliased <code>codebreak_game.player</code> table reference
     */
    public Player(String alias) {
        this(alias, PLAYER);
    }

    private Player(String alias, Table<PlayerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Player(String alias, Table<PlayerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CodebreakGame.CODEBREAK_GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PlayerRecord> getPrimaryKey() {
        return Keys.KEY_PLAYER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PlayerRecord>> getKeys() {
        return Arrays.<UniqueKey<PlayerRecord>>asList(Keys.KEY_PLAYER_PRIMARY, Keys.KEY_PLAYER_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PlayerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PlayerRecord, ?>>asList(Keys.FK_PLAYER_TO_ACCOUNT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Player as(String alias) {
        return new Player(alias, this);
    }

    /**
     * Rename this table
     */
    public Player rename(String name) {
        return new Player(name, null);
    }
}
